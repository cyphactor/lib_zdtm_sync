2007-02-07 Andrew De Ponte <cyphactor@socal.rr.com>

* Moved the zdtm_send_message() and zdtm_recv_message() functions from
the zdtm_sync.h and zdtm_sync.c files into zdtm_net.h and zdtm_net.c and
renamed them to _zdtm_wrapped_send_message() and
_zdtm_wrapped_recv_message() respectively.

* Stubbed out the zdtm_handle_connecion() general API function and
provided some documentation to it so the general API can easily be
understood.

2007-02-05 Andrew De Ponte <cyphactor@socal.rr.com>

* Modified the build configuration so that the testing sub-directory is
build conditionally depending on if it is a Unix Variant or Windows.
Hence, the testing sub-directory will be built on Unix Variants and will
NOT be built for Windows.

2007-02-05 Andrew De Ponte <cyphactor@socal.rr.com>

* I moved the appropriate portions of zdtm_sync.h and zdtm_sync.c into
the newley created files to create better structure and organization to
the code base.

* I also added the zdtm_types.c file which was necessary to define some
extern variables.

* Changed the zdtm_env_t socket members from the unix standard integer
type to the newly defined cross-platform type SOCKET.

* Modified the _zdtm_listen_for_zaurus() function in the zdtm_net.c file
to be cross-platform between Unix Varients and Windows.

* Modified the _zdtm_handle_zaurus_conn() function in the zdtm_net.c
file to be cross-platform between Unix Varients and Windows.

* Modified the _zdtm_close_zaurus_conn() function in the zdtm_net.c file
to be cross-platform between Unix Varients and Windows.

* Modified the _zdtm_conn_to_zaurus() function in the zdtm_net.c file to
be cross-platform between Unix Varients and Windows.

* Modified the _zdtm_close_conn_to_zaurus() function in the zdtm_net.c
file to be cross-platform between Unix Varients and Windows.

* Modified the _zdtm_send_comm_message_to() function in the zdtm_net.c
file and zdtm_net.h file to be cross-platform between Unix Varients and
Windows. I also rewrote the algorithm to always write COM_MSG_SIZE
bytes. It had a problem before where if due to buffer issues less than
COM_MSG_SIZE bytes were written then it would return in error.

* The _zdtm_send_ack_message(), _zdtm_send_rqst_message(), and
_zdtm_send_abrt_message() functions needed NO modification since they
are strictly interface functions to the _zdtm_send_comm_message_to()
function.

* Rewrote the _zdtm_recv_message() function in the zdtm_net.c file to be
cross-platform between Unix Varients and Windows. I also rewrote it from
scratch to make sure we are recving all the necessary/available bytes
given the that recv() does not gaurante one gets the number of bytes
they request.

* The _zdtm_send_message() function needed NO modification since it is
strictly an interface function to the _zdtm_send_message_to() function.

* Modified the _zdtm_send_message_to() function in the zdtm_net.c file
to be cross-platform between Unix Varients and Windows. I also rewrote a
portion of it so that it will write all the messages bytes, without
having to worry about buffering issues.

* Wrote the content for the README file to describe appropriately how to
build on Unix, Mac OS X, and Windows.

* Modified the configure.ac to handle the host specific build flags.

* Modified the src/Makefile.am to use the new host specific LDFLAGS
provided in the configure.ac.

* Did both Linux and Windows tests on Debian (Etch = Testing), all
builds with 0 errors, 0 warnings. However, the functionality has not
been tested.

* Removed testing directory from the root Makefile.am file so that the
testing directory wouldn't be built. The testing directory was custom
testing designed for unix version only, and hence uses functions that
are not exported via the windows DLL yet. Once, they are ported over
it will be re-inserted into the root Makefile.am.

2007-01-31 Andrew De Ponte <cyphactor@socal.rr.com>

* I created all the files for the new code base structure and added them
to the Makefile.am.

2006-10-09 Andrew De Ponte <cyphactor@socal.rr.com>

* Implemented the zdtm_obtain_device_info() function as part of the
general API and documented it.

* Implemented and documented the zdtm_initialize_sync() function as part
of the general API and documented it.

* Updated the zdtm_test_daemon such that zdtm_initialize_sync() and
zdtm_obtain_device_info() where used to replace the code that is now
obfuscated by those general API functions.

2006-10-06 Andrew De Ponte <cyphactor@socal.rr.com>

* Changed the names of the zdtm_open_log, zdtm_write_log,
zdtm_dump_msg_log, zdtm_close_log, and zdtm_listen_for_zaurus by
prepending an underscore(_) to their names, as to indicate that they are
theoretically private functions and are not a part of the general API.

* Implemented the zdtm_initialize and zdtm_finalize functions to be part
of the general API and to encapsulate the usage of the theoretically
private functions _zdtm_open_log, _zdtm_listen_for_zaurus, and
_zdtm_close_log.

* Documented the zdtm_initialize and zdtm_finalize functions.

* Changed the names of the zdtm_conn_to_zaurus, zdtm_send_message_to,
and the zdtm_handle_zaurus_conn functions by prepending an underscore(_)
to their names, as to indicate that they are theoretically private
functions and are not a part of the general API.

* Implemented the zdtm_connect function to be part of the general API
and to encapsulate the usage of the theoretically private functions
_zdtm_conn_to_zaurus, _zdtm_send_message_to, and
_zdtm_handle_zaurus_conn.

* Documented the zdtm_connect function.

* Changed the namse of the zdtm_send_rqst_message, zdtm_recv_message,
zdtm_send_ack_message, zdtm_send_abrt_message, zdtm_send_comm_message_to
and zdtm_send_message functions by prepending an underscore(_) to their
names, as to indicate that they are theoretically private functions and
are not a part of the general API.

* Implemented the zdtm_send_message and zdtm_recv_message function to be
part of the general API and to encapsulate the usage of the
theoretically private functions _zdtm_send_message, _zdtm_recv_message,
_zdtm_send_rqst_message, and _zdtm_send_ack_message.

* Changed the names of the zdtm_close_zaurus_conn and
zdtm_close_conn_to_zaurus functions by prepending an underscore(_) to
their names, as to indicate that they are theoretically private
functions and are not a part of the general API.

* Implemented the zdtm_disconnect function to be part of the general API
and to encapsulate the usage of the theoretically private functions
_zdtm_recv_message, _zdtm_send_message, _zdtm_close_zaurus_conn, and
_zdtm_close_conn_to_zaurus.

* Documented the zdtm_send_message, zdtm_recv_message, and
zdtm_disconnect functions.

* Converted zdtm_test_daemon.c so that it used the new general API
functions and used the new private functions when necessary.

* Converted zdtm_prepare_message_test.c so that it used the new general
API functions and used the new private functions when necessary.

* Changed the names fo the zdtm_checksum, zdtm_is_ack_message,
zdtm_is_rqst_message, zdtm_is_abrt_message, zdtm_clean_message,
zdtm_prepare_message, and zdtm_parse_raw_msg functions by prepending an
underscore(_) to their names, as to indicate that they are theoretically
private functions and are not a part of the general API.

* Converted zdtm_prepare_message_test.c so that it used
_zdtm_prepare_message rather than zdtm_prepare_message.

* Documented the _zdtm_send_comm_message_to, _zdtm_send_ack_message,
_zdtm_send_rqst_message, _zdtm_send_abrt_message, and _zdtm_send_message
functions, and updated the documentation for the _zdtm_send_message_to
function so that it better matched it's functionality.

* Implemented the _zdtm_log_error function.

* Added some logging using the _zdtm_log_error function and used
_zdtm_clean_message where people had neglected to add it.

* Debugged and cleaned up the zdtm_test_daemon application after it was
converted to use all the new library API functions. Hence, it is now
functional again!
